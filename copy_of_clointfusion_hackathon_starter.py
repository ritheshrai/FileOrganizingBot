# -*- coding: utf-8 -*-
"""

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1layqbT6rwr_YIZ7xkkfiNWJv63C79GGs

## **Quick Start**

**pip install --upgrade jupyter_http_over_ws>=0.0.7 && jupyter serverextension enable --py jupyter_http_over_ws**

**jupyter notebook --NotebookApp.allow_origin='https://colab.research.google.com' --port=8888 --NotebookApp.port_retries=0**

# **pip install ClointFusion**
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install --upgrade ClointFusion

"""# **File Organizing Bot**

Importing the Library
"""

import ClointFusion as cf
import os

"""Taking path as a input and **validating**"""

#plat = platform.system()
def path_take():
   path = cf.gui_get_any_file_from_user('select an folder with a file')
   if os.path.exists(path):
     x = path.rsplit("/", 1)
     path=x[0]
     print(path)
     return path
   else:
     print("invalid path")

#https://pypi.org/project/pathvalidate/#:~:text=pathvalidate%20is%20a%20Python%20library%20to,sanitize%2Fvalidate%20a%20string%20such%20as%20filenames%2Ffile-paths%2Fetc.
#files_list = cf.folder_get_all_filenames_as_list("C:\Test")

"""**3 funtions**  -to move ,to organize,to merge folders"""

#content mover funtion
def Folder_content_move(src,dest):
  os.rename(src,dest)
#file oranizer Bot funtion
def files_filter(path,extentions,filetype):
  for extention in extentions:
    files_list = cf.folder_get_all_filenames_as_list(path,extension=extention)
    if not files_list:
      pass
    else:
      cf.folder_create(path+'\\'+filetype)
      for p in files_list:
        if p!=extention:
          src=path+'\\'+p
          dest=path+'\\'+filetype+'\\'+p
          Folder_content_move(src,dest)
#folder content merger funtion
def folder_merger(src,dest):
   files_list = cf.folder_get_all_filenames_as_list(src)
   for p in files_list:
            src_s=src+'\\'+p
            dest_s=dest+'\\'+p
            Folder_content_move(src_s,dest_s)

cf.OFF_semi_automatic_mode()
path = path_take()
#os.path.join(os.path.join(os.environ['USERPROFILE']), 'Downloads')
#images filter
images=['png','jpg','jpeg','JFIF','Exif','TIFF','TIF','gif','bmp','ico']
videos=['mp4','mvk','webm','flv','vob','MTS','M2TS','TS','wmv','yuv','rm','rmvb','m4p','m4v','mpeg','mpg','svi','3gp','3GP']
Document=['docx','pdf','doc','odt','ppt','pptx','txt','gdoc','gdocx','rtf']
other=['zip','rar']
exel=['xls','xlsx','csv']
audio=['mp3','aif','cda','mid','midi','mpa','ogg','wav','wma','wpl']
options_for_user_lst = ['images','videos','Document','Music','Exel','other']
user_choise = cf.gui_get_dropdownlist_values_from_user('list of colors',options_for_user_lst)
if 'images' in user_choise:
  files_filter(path,images,'images')
  print(" images flittered to images folder "+cf.show_emoji())
if 'videos' in user_choise:
  files_filter(path,videos,'Videos')
  print(" video filtterd to video folder  "+cf.show_emoji())
if 'Document' in user_choise:
  files_filter(path,Document,'Document')
  print(" documents filtterd to Document folder  "+cf.show_emoji())
if 'Music' in user_choise:
  files_filter(path,audio,'Music')
  print(" Audios filtterd to Music folder  "+cf.show_emoji())
if 'Exel' in user_choise:
  files_filter(path,exel,'Exel')
  print(" exel filtterd to Exel folder  "+cf.show_emoji())
if 'other' in user_choise:
  files_filter(path,other,'other')
  print(" compressed filtterd to other folder  "+cf.show_emoji())

"""To undo the organization of files"""

'''
undo = ['images','videos','Document','Music','Exel','compessed']
choise = cf.gui_get_dropdownlist_values_from_user('choose the file types',options_for_user_lst)
for foldername in choise:
    src=path+'/'+foldername
    dest=path
    folder_merger(src,dest)  '''
